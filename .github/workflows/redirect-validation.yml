name: Redirect Chain Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6 AM UTC to catch any drift
    - cron: '0 6 * * *'

jobs:
  validate-redirects:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps
    
    - name: Build application
      run: pnpm build
    
    - name: Start application in background
      run: pnpm start &
      env:
        NODE_ENV: production
    
    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/health || curl -f http://localhost:3000; do sleep 2; done'
    
    - name: Run redirect chain validation
      run: pnpm test:redirect-chains:ci
      env:
        CI: true
    
    - name: Export redirect chain analysis
      run: pnpm export:redirect-chains
      continue-on-error: true
    
    - name: Upload redirect analysis artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: redirect-analysis
        path: |
          redirect-chains-analysis.csv
          redirect-chains-report.json
          test-results/
        retention-days: 30
    
    - name: Comment PR with redirect analysis
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## üö® Redirect Chain Validation Failed\n\n';
          comment += 'Your changes have introduced redirect chains of 3+ hops, which:\n';
          comment += '- Waste crawl budget\n';
          comment += '- Dilute PageRank\n';
          comment += '- Can break Core Web Vitals due to extra RTTs\n\n';
          
          try {
            const reportPath = 'redirect-chains-report.json';
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              if (report.analysis.problematicChains.length > 0) {
                comment += '### Problematic Chains Found:\n\n';
                report.analysis.problematicChains.forEach(chain => {
                  comment += `- \`${chain.originalSource}\` ‚Üí \`${chain.finalDestination}\` (${chain.hopCount} hops)\n`;
                });
                comment += '\n';
              }
            }
          } catch (e) {
            console.log('Could not read analysis report:', e.message);
          }
          
          comment += '### Fix Required:\n';
          comment += '1. Update `next.config.mjs` redirects to go directly to final destinations\n';
          comment += '2. Run `pnpm export:redirect-chains` locally to analyze chains\n';
          comment += '3. Ensure each redirect has only 1 hop (source ‚Üí final destination)\n\n';
          comment += '### Download Analysis:\n';
          comment += 'Check the "redirect-analysis" artifact in this workflow run for detailed CSV and JSON reports.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Check for redirect loops
      run: node scripts/export-redirect-chains.js
    
    - name: Validate redirect configuration
      run: |
        echo "üîç Checking for common redirect security issues..."
        
        # Check for potential open redirects
        if grep -r "destination.*http" next.config.mjs; then
          echo "‚ö†Ô∏è Found external redirects - verify these are intentional"
        fi
        
        # Check for wildcard patterns that might be too broad
        if grep -r "source.*\*.*\*" next.config.mjs; then
          echo "‚ö†Ô∏è Found complex wildcard patterns - verify these are safe"
        fi
        
        echo "‚úÖ Redirect security check completed"
